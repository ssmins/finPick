"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 4.2.16.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

import os
from dotenv import load_dotenv
import environ

# .env 파일 로드
load_dotenv()  

# environ을 사용하여 환경 변수 설정
env = environ.Env(DEBUG=(bool, True))

# .env 파일의 경로를 지정하여 로드
environ.Env.read_env(env_file=os.path.join(BASE_DIR, '.env'))

# API 키 로드
API_KEY = env('API_KEY')  # .env 파일에 작성된 API_KEY
EXCHANGE_API_KEY = env('EXCHANGE_API_KEY')  # .env 파일에 작성된 EXCHANGE_API_KEY
# VITE_KAKAO_JAVASCRIPT_KEY = env('VITE_KAKAO_JAVASCRIPT_KEY')  # .env 파일에 작성된 EXCHANGE_API_KEY
VITE_KAKAO_JAVASCRIPT_KEY = os.environ.get('VITE_KAKAO_JAVASCRIPT_KEY')  # .env 파일에 작성된 EXCHANGE_API_KEY

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-%9%w2g05@_60ml7v_d=kq7ynclvsy$e+!w2s9n!b$bhz!3g*^!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'accounts', 
    'articles', 
    'products', 
    'exchange', 
    'bankmaps', # 
    'rest_framework', 
    'rest_framework.authtoken', # 
    'corsheaders', # 
    'dj_rest_auth', #
    # dj-rest-auth 와 allauth 를 사용하기 위해 등록돼있어야 할 앱들  
    'django.contrib.sites', #
    'allauth', # 
    'allauth.account', # 
    'allauth.socialaccount', # 
    'dj_rest_auth.registration', # 
    'drf_yasg', #

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

# 배포를 위해 필요한 도메인마다의 사이트 id 값을 주기 위해 대비하는 값 . 소셜 인증에도 사용된다 
SITE_ID = 1 

REST_FRAMEWORK = {
    # Authentication
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ],
    # permission
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',  
    ],
    'USER_DETAILS_SERIALIZER' : 'accounts.serializers.CustomUserDetailsSerializer', 
}

REST_AUTH = {
    'REGISTER_SERIALIZER' : 'accounts.serializers.CustomRegisterSerializer',
    'USER_DETAILS_SERIALIZER' : 'accounts.serializers.CustomUserDetailsSerializer', 
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware', # 
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware', #
]

CORS_ALLOWED_ORIGINS = [ # vue로의 접근 허용 - CORS 설정 
    'http://127.0.0.1:5173',
    'http://localhost:5173',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'accounts.User'

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'